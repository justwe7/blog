(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{378:function(t,v,_){"use strict";_.r(v);var d=_(2),o=Object(d.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("方法")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("exec")]),t._v(" "),_("td",[t._v("一个在字符串中执行查找匹配的RegExp方法，它返回一个数组（未匹配到则返回null）。        "),_("br"),t._v(" "),_("code",[t._v("/\\S/.exec('abc')")]),t._v("    exec方法返回包含第一个匹配的的数组或null")])]),t._v(" "),_("tr",[_("td",[t._v("test")]),t._v(" "),_("td",[t._v("一个在字符串中测试是否匹配的RegExp方法，它返回true或false。                       "),_("br"),t._v(" "),_("code",[t._v("/\\S/.test('abc')")])])]),t._v(" "),_("tr",[_("td",[t._v("match")]),t._v(" "),_("td",[t._v("一个在字符串中执行查找匹配的String方法，它返回一个数组或者在未匹配到时返回null。       "),_("br"),t._v(" "),_("code",[t._v("'abc'.match(/\\S/)")]),t._v("        match方法返回包含所有匹配子字符串的数组")])]),t._v(" "),_("tr",[_("td",[t._v("search")]),t._v(" "),_("td",[t._v("一个在字符串中测试匹配的String方法，它返回匹配到的位置索引，或者在失败时返回-1。        "),_("br"),t._v(" "),_("code",[t._v("'abc'.search(/\\S/)")])])]),t._v(" "),_("tr",[_("td",[t._v("replace")]),t._v(" "),_("td",[t._v("一个在字符串中执行查找匹配的String方法，并且使用替换字符串替换掉匹配到的子字符串。           "),_("br"),t._v(" "),_("code",[t._v("'abc'.replace(/\\S/, 1)")])])]),t._v(" "),_("tr",[_("td",[t._v("split")]),t._v(" "),_("td",[t._v("一个使用正则表达式或者一个固定字符串分隔一个字符串，并将分隔后的子字符串存储到数组中的String方法。       "),_("br"),t._v(" "),_("code",[t._v("'abc'.split(/b/)")])])])])]),t._v(" "),_("h3",{attrs:{id:"表达式元字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#表达式元字符"}},[t._v("#")]),t._v(" 表达式元字符")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("元字符")]),t._v(" "),_("th",[t._v("作用")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("code",[t._v("\\")])]),t._v(" "),_("td",[t._v("将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\”匹配“\\”而“(”则匹配“(”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("^")])]),t._v(" "),_("td",[t._v("匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\\n”或“\\r”之后的位置。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("$")])]),t._v(" "),_("td",[t._v("匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("*")])]),t._v(" "),_("td",[t._v("匹配前面的子表达式零次或多次。例如，zo*能匹配“z”以及“zoo”。*等价于{0,}。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("+")])]),t._v(" "),_("td",[t._v("匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("?")])]),t._v(" "),_("td",[t._v("匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("{n}")])]),t._v(" "),_("td",[t._v("n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("{n,}")])]),t._v(" "),_("td",[t._v("n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("{n,m}")])]),t._v(" "),_("td",[t._v("m和n均为非负整数，其中n<=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("?")])]),t._v(" "),_("td",[t._v("当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v(".")])]),t._v(" "),_("td",[t._v("匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.|\\n)”的模式。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("(pattern)")])]),t._v(" "),_("td",[t._v("匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“(”或“)”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("(?:pattern)")])]),t._v(" "),_("td",[t._v("匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("(?=pattern)")])]),t._v(" "),_("td",[t._v("正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("(?!pattern)")])]),t._v(" "),_("td",[t._v("正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("(?<=pattern)")])]),t._v(" "),_("td",[t._v("反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?<=95|98|NT|2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("(?<!pattern)")])]),t._v(" "),_("td",[t._v("反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?<!95|98|NT|2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("x\\|y")])]),t._v(" "),_("td",[t._v("匹配x或y。例如，“z|food”能匹配“z”或“food”。“(z|f)ood”则匹配“zood”或“food”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("[xyz]")])]),t._v(" "),_("td",[t._v("字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("[^xyz]")])]),t._v(" "),_("td",[t._v("取反字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("[a-z]")])]),t._v(" "),_("td",[t._v("字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("[^a-z]")])]),t._v(" "),_("td",[t._v("取反字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\b")])]),t._v(" "),_("td",[t._v("匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\B")])]),t._v(" "),_("td",[t._v("匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\cx")])]),t._v(" "),_("td",[t._v("匹配由x指明的控制字符。例如，\\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\d")])]),t._v(" "),_("td",[t._v("匹配一个数字字符。等价于[0-9]。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\D")])]),t._v(" "),_("td",[t._v("匹配一个非数字字符。等价于[^0-9]。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\f")])]),t._v(" "),_("td",[t._v("匹配一个换页符。等价于\\x0c和\\cL。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\n")])]),t._v(" "),_("td",[t._v("匹配一个换行符。等价于\\x0a和\\cJ。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\r")])]),t._v(" "),_("td",[t._v("匹配一个回车符。等价于\\x0d和\\cM。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\s")])]),t._v(" "),_("td",[t._v("匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\S")])]),t._v(" "),_("td",[t._v("匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\t")])]),t._v(" "),_("td",[t._v("匹配一个制表符。等价于\\x09和\\cI。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\v")])]),t._v(" "),_("td",[t._v("匹配一个垂直制表符。等价于\\x0b和\\cK。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\w")])]),t._v(" "),_("td",[t._v("匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\W")])]),t._v(" "),_("td",[t._v("匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\xn")])]),t._v(" "),_("td",[t._v("匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&1”。正则表达式中可以使用ASCII编码。.")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\num")])]),t._v(" "),_("td",[t._v("匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\n")])]),t._v(" "),_("td",[t._v("标识一个八进制转义值或一个向后引用。如果\\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\nm")])]),t._v(" "),_("td",[t._v("标识一个八进制转义值或一个向后引用。如果\\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\\nm将匹配八进制转义值nm。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\nml")])]),t._v(" "),_("td",[t._v("如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("\\un")])]),t._v(" "),_("td",[t._v("匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（©）。")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("RegExp.$n 可以提取符合条件的括号分组内的字符")]),t._v(" "),_("p",[t._v("如： if (/^https?😕/(\\w+)/.test('https://lihx.top')) { RegExp.$1 // lihx }")])]),t._v(" "),_("h3",{attrs:{id:"常用正则表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用正则表达式"}},[t._v("#")]),t._v(" 常用正则表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("规则")]),t._v(" "),_("th",[t._v("正则")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("空")]),t._v(" "),_("td",[_("code",[t._v("/^\\s*$/")])])]),t._v(" "),_("tr",[_("td",[t._v("用户名")]),t._v(" "),_("td",[_("code",[t._v("/^[a-z0-9_-]{3,16}$/")])])]),t._v(" "),_("tr",[_("td",[t._v("手机号")]),t._v(" "),_("td",[_("code",[t._v("/^1(3|5|6|7|8|9)\\d{9}$/")])])]),t._v(" "),_("tr",[_("td",[t._v("中国身份证")]),t._v(" "),_("td",[_("code",[t._v("/^\\d{6}(19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|[xX])$/")])])]),t._v(" "),_("tr",[_("td",[t._v("密码")]),t._v(" "),_("td",[_("code",[t._v("/^[a-z0-9_-]{6,18}$/")])])]),t._v(" "),_("tr",[_("td",[t._v("提取数字")]),t._v(" "),_("td",[_("code",[t._v("/\\d+/g")])])]),t._v(" "),_("tr",[_("td",[t._v("电子邮箱")]),t._v(" "),_("td",[_("code",[t._v("/^[\\w.\\-]+@(?:[a-z0-9]+(?:-[a-z0-9]+)*\\.)+[a-z]{2,3}$/")]),t._v(" "),_("br"),t._v(" "),_("code",[t._v("/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/ <br> /^[a-z\\d]+(\\.[a-z\\d]+)*@([\\da-z](-[\\da-z])?)+(\\.{1,2}[a-z]+)+$/")])])]),t._v(" "),_("tr",[_("td",[t._v("URL")]),t._v(" "),_("td",[_("code",[t._v("/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/")])])]),t._v(" "),_("tr",[_("td",[t._v("十六进制值")]),t._v(" "),_("td",[_("code",[t._v("/^#?([a-f0-9]{6}|[a-f0-9]{3})")]),t._v("$/")])]),t._v(" "),_("tr",[_("td",[t._v("删除代码:"),_("code",[t._v("\\\\")]),t._v("注释")]),t._v(" "),_("td",[_("code",[t._v("/(?<!http:|\\S)\\/\\/.*$/")])])]),t._v(" "),_("tr",[_("td",[t._v("IP 地址")]),t._v(" "),_("td",[_("code",[t._v("/((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)/ <br> /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9\\|[01]?[0-9][0-9]?)$/")])])]),t._v(" "),_("tr",[_("td",[t._v("HTML 标签")]),t._v(" "),_("td",[_("code",[t._v("/^<([a-z]+)([^<]+)*(?:>(.*)<\\/\\1>|\\s+\\/>)$/")])])]),t._v(" "),_("tr",[_("td",[t._v("是否http协议地址兼容http(s)")]),t._v(" "),_("td",[_("code",[t._v("/^https?:\\/\\//.test('https://lihx.top')")])])])])])])}),[],!1,null,null,null);v.default=o.exports}}]);