(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{358:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"函数定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数定义"}},[s._v("#")]),s._v(" 函数定义")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" fn "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("return int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("blockquote",[a("p",[a("code",[s._v("[]")]),s._v("代表可缺省")])]),s._v(" "),a("ul",[a("li",[s._v("可以带"),a("code",[s._v("function fun()")]),s._v(" 定义，也可以直接"),a("code",[s._v("fun()")]),s._v(" 定义,不带任何参数。")]),s._v(" "),a("li",[s._v("参数返回值，可以显式加："),a("code",[s._v("return")]),s._v(" 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255")])]),s._v(" "),a("blockquote",[a("p",[s._v("所有函数在使用前必须定义。这意味着必须将函数放在脚本开始部分，直至shell解释器首次发现它时，才可以使用。调用函数仅使用其函数名即可。")])]),s._v(" "),a("p",[a("strong",[s._v("示例1")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("demoFun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这是我的第一个 shell 函数!"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----函数开始执行-----"')]),s._v("\ndemoFun\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----函数执行完毕-----"')]),s._v("\n")])])]),a("p",[a("strong",[s._v("示例2")]),s._v("函数返回值")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("funWithReturn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这个函数会对输入的两个数字进行相加运算..."')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"输入第一个数字: "')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" aNum\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"输入第二个数字: "')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" anotherNum\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"两个数字分别为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$aNum")]),s._v(" 和 "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$anotherNum")]),s._v(' !"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("$aNum"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("$anotherNum"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nfunWithReturn\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"输入的两个数字之和为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v(' !"')]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("函数返回值在调用该函数后通过 "),a("code",[s._v("$?")]),s._v(" 来获得\n"),a("strong",[a("code",[s._v("$?")]),s._v("仅代表上一条指令的执行结果")]),s._v("，无论式function 还是 echo，没有指定返回则为0，0代表执行成功")]),s._v(" "),a("p",[s._v("函数与命令的执行结果可以作为条件语句使用。要注意的是，和 C 语言不同，shell 语言中 0 代表 true，0 以外的值代表 false。")])]),s._v(" "),a("h3",{attrs:{id:"函数参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数参数"}},[s._v("#")]),s._v(" 函数参数")]),s._v(" "),a("p",[a("code",[s._v("在函数体内部，通过 $n 的形式来获取参数的值，例如，$1表示第一个参数，$2表示第二个参数...")])]),s._v(" "),a("p",[s._v("带参数的函数示例：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("funWithParam")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第一个参数为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(' !"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第二个参数为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(' !"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第十个参数为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$10")]),s._v(' !"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#错误写法")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第十个参数为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${10}")]),s._v(' !"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第十一个参数为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${11}")]),s._v(' !"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数总数有 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v(' 个!"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"作为一个字符串输出所有参数 '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v(' !"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nfunWithParam "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("73")]),s._v("\n\n第一个参数为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n第二个参数为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n第十个参数为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n第十个参数为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n第十一个参数为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("73")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n参数总数有 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" 个"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n作为一个字符串输出所有参数 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("73")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])])]),a("blockquote",[a("p",[a("code",[s._v("$10")]),s._v("不能获取第十个参数，获取第十个参数需要"),a("code",[s._v("${10}")]),s._v("。当n>=10时，需要使用"),a("code",[s._v("${n}")]),s._v("来获取参数。")])]),s._v(" "),a("h3",{attrs:{id:"函数执行信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数执行信息"}},[s._v("#")]),s._v(" 函数执行信息")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("参数符号")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("$#")])]),s._v(" "),a("td",[s._v("传递到脚本的参数个数")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("$*")])]),s._v(" "),a("td",[s._v('以一个单字符串显示所有向脚本传递的参数。如"$*"用「"」括起来的情况、以"$1 $2 … $n"的形式输出所有参数。')])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("$$")])]),s._v(" "),a("td",[s._v("脚本运行的当前进程ID号")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("$!")])]),s._v(" "),a("td",[s._v("后台运行的最后一个进程的ID号")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("$@")])]),s._v(" "),a("td",[s._v("与"),a("code",[s._v("$*")]),s._v("相同，但是使用时加引号，并在引号中"),a("strong",[s._v("返回每个参数")]),s._v('。如"$@"用「"」括起来的情况、以"$1" "$2" … "$n" 的形式输出所有参数。')])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("$-")])]),s._v(" "),a("td",[s._v("显示Shell使用的当前选项，与set命令功能相同。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("$?")])]),s._v(" "),a("td",[s._v("显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);