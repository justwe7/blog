(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{229:function(t,_,a){"use strict";a.r(_);var v=a(0),r=Object(v.a)({},(function(){var t=this,_=t.$createElement,a=t._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[a("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AFTCPIP%E5%88%86%E5%B1%82%E5%8D%8F%E8%AE%AE"}},[t._v("什么是TCP/IP分层协议")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%BA%94%E7%94%A8%E5%B1%82"}},[t._v("应用层")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BC%A0%E8%BE%93%E5%B1%82"}},[t._v("传输层")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E7%BD%91%E7%BB%9C%E5%B1%82"}},[t._v("网络层")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82"}},[t._v("数据链路层")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#TCPIP%E9%80%9A%E4%BF%A1%E6%B5%81"}},[t._v("TCP/IP通信流")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%8Ehttp%E7%9B%B8%E5%85%B3%E7%9A%84IPTCPDNS"}},[t._v("与http相关的IP、TCP、DNS")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#IP%E5%8D%8F%E8%AE%AE-%E8%B4%9F%E8%B4%A3%E4%BC%A0%E8%BE%93"}},[t._v("IP协议-负责传输")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#TCP%E5%8D%8F%E8%AE%AE-%E7%A1%AE%E4%BF%9D%E5%8F%AF%E9%9D%A0%E6%80%A7"}},[t._v("TCP协议-确保可靠性")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B-%E7%A1%AE%E4%BF%9D%E6%95%B0%E6%8D%AE%E8%83%BD%E5%A4%9F%E5%88%B0%E8%BE%BE%E7%9B%AE%E6%A0%87"}},[t._v("三次握手-确保数据能够到达目标")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B-%E5%85%B3%E9%97%ADTCP%E8%BF%9E%E6%8E%A5"}},[t._v("四次挥手-关闭TCP连接")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#DNS"}},[t._v("DNS")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[t._v("参考文章")])])]),t._v(" "),a("h2",{attrs:{id:"什么是tcp-ip分层协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是tcp-ip分层协议"}},[t._v("#")]),t._v(" 什么是TCP/IP分层协议")]),t._v(" "),a("p",[t._v("计算机与网络设备要相互通信，双方就必须基于相同的方法，通信的规则就叫做协议。把与互联网相关联的协议集合起来总称为 TCP/IP。TCP/IP协议族按层次分别分为应用层、传输层、网络层、数据链路层。相对于OSI模型简化了表示层和会话层，数据链路层细化为了链路层和物理层。分层协议的好处是每个层次可以只考虑当前层次的任务，使设计更加简单。")]),t._v(" "),a("h3",{attrs:{id:"应用层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用层"}},[t._v("#")]),t._v(" 应用层")]),t._v(" "),a("p",[t._v("决定向用户提供应用服务时通信的活动。常见的http协议处于该层，预存了各类通用的应用服务，如FTP，DNS")]),t._v(" "),a("h3",{attrs:{id:"传输层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传输层"}},[t._v("#")]),t._v(" 传输层")]),t._v(" "),a("p",[t._v("对接应用层，将应用层的数据进行处理(如http报文分割打标记)后转发给网络层，传输层有两个不同性质协议：")]),t._v(" "),a("ol",[a("li",[t._v("TCP 传输控制协议")]),t._v(" "),a("li",[t._v("UDP 用户数据报协议")])]),t._v(" "),a("h3",{attrs:{id:"网络层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[t._v("#")]),t._v(" 网络层")]),t._v(" "),a("p",[t._v("将上层的数据包处理为二进制的数据包(上课学到的曼彻斯特编码差分曼彻斯特编码好像在这里挥发?)，选择一条路线传输给对方，IP协议处于这层")]),t._v(" "),a("h3",{attrs:{id:"数据链路层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据链路层"}},[t._v("#")]),t._v(" 数据链路层")]),t._v(" "),a("p",[t._v("硬件部分，包含系统、硬件驱动、网卡、网线等。")]),t._v(" "),a("h3",{attrs:{id:"tcp-ip通信流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip通信流"}},[t._v("#")]),t._v(" TCP/IP通信流")]),t._v(" "),a("p",[t._v("发送端从应用层往下走，接收端从链路层往上走")]),t._v(" "),a("p",[a("img",{attrs:{src:"/static/tcpip.png",alt:"TCPIP",title:"TCPIP通信流"}})]),t._v(" "),a("h2",{attrs:{id:"与http相关的ip、tcp、dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与http相关的ip、tcp、dns"}},[t._v("#")]),t._v(" 与http相关的IP、TCP、DNS")]),t._v(" "),a("h3",{attrs:{id:"ip协议-负责传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip协议-负责传输"}},[t._v("#")]),t._v(" IP协议-负责传输")]),t._v(" "),a("p",[t._v("几乎所有的网络系统都会使用到IP协议，作用是将各种数据包传送给对方，首先要满足IP(节点被分配到的地址)地址和MAC(网卡的固定地址)地址。使用ARP协议,可以通过IP地址反查出MAC地址。中转的过程可能需要多次传输，中间交由多个路由器进行转发。")]),t._v(" "),a("h3",{attrs:{id:"tcp协议-确保可靠性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp协议-确保可靠性"}},[t._v("#")]),t._v(" TCP协议-确保可靠性")]),t._v(" "),a("p",[t._v("TCP处于传输层，提供可靠的字节流服务。所谓的字节流服务（Byte Stream Service）是指，为了方便传输， 将大块数据分割成以报文段（segment）为单位的数据包进行管理。而可靠的传输服务是指，能够把数据准确可靠地传给对方。")]),t._v(" "),a("p",[t._v("一言以蔽之，TCP 协议为了更容易传送大数据才把数据分割，而且 TCP 协议能够确认数据最终是否送达到对方。")]),t._v(" "),a("h4",{attrs:{id:"三次握手-确保数据能够到达目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三次握手-确保数据能够到达目标"}},[t._v("#")]),t._v(" 三次握手-确保数据能够到达目标")]),t._v(" "),a("p",[t._v("使用三次握手策略，TCP把数据包发送出去一定会向对方确认是否送达。握手过程使用了TCP的标记，SYN和ACK。")]),t._v(" "),a("ol",[a("li",[t._v("发送端："),a("strong",[t._v("发送标记有SYN的数据包")]),t._v("。并指明客户端的初始化序列号 ISN(c)。此时客户端处于 SYN_Send 状态。")]),t._v(" "),a("li",[t._v("接收端："),a("strong",[t._v("发送带有SYN/ACK的数据包")]),t._v("。服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN(s)，同时会把客户端的 ISN + 1 作为 ACK 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 SYN_REVD 的状态。")]),t._v(" "),a("li",[t._v("发送端："),a("strong",[t._v("发送带有ACK的数据包")]),t._v("。客户端收到 SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 establised 状态。"),a("br"),t._v("\n接收端收到 ACK 报文之后，也处于 establised 状态，此时，双方以建立起了链接")])]),t._v(" "),a("p",[a("strong",[t._v("多说点作用")])]),t._v(" "),a("ul",[a("li",[t._v("确认双方的接受能力、发送能力是否正常。")]),t._v(" "),a("li",[t._v("指定自己的初始化序列号，为后面的可靠传送做准备。")]),t._v(" "),a("li",[t._v("如果是 https 协议的话，三次握手这个过程，还会进行数字证书的验证以及加密密钥的生成到。")])]),t._v(" "),a("h4",{attrs:{id:"四次挥手-关闭tcp连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手-关闭tcp连接"}},[t._v("#")]),t._v(" 四次挥手-关闭TCP连接")]),t._v(" "),a("p",[t._v("刚开始双方都处于 establised 状态")]),t._v(" "),a("ol",[a("li",[t._v("发送端："),a("strong",[t._v("发送一个 FIN 报文")]),t._v("。报文中会指定一个序列号。此时发送端处于FIN_WAIT1状态。")]),t._v(" "),a("li",[t._v("接收端："),a("strong",[t._v("会发送 ACK 报文")]),t._v("。收到 FIN 之后，会发送 ACK 报文，且把发送端的序列号值 + 1 作为 ACK 报文的序列号值，表明已经收到发送端的报文了，此时接收端处于 CLOSE_WAIT状态。")]),t._v(" "),a("li",[t._v("接收端："),a("strong",[t._v("发送 FIN 报文")]),t._v("。如果接收端也想断开连接了，和发送端的第一次挥手一样，发给发送端 FIN 报文，且指定一个序列号。此时接收端处于 LAST_ACK 的状态。")]),t._v(" "),a("li",[t._v("发送端："),a("strong",[t._v("发送 ACK 报文")]),t._v("。收到 FIN 之后，一样发送一个 ACK 报文作为应答，且把接收端的序列号值 + 1 作为自己 ACK 报文的序列号值，此时发送端处于 TIME_WAIT 状态。需要过一阵子以确保接收端收到自己的 ACK 报文之后才会进入 CLOSED 状态。"),a("br"),t._v("\n接收端收到 ACK 报文之后，就处于关闭连接了，处于 CLOSED 状态。")])]),t._v(" "),a("h3",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[t._v("#")]),t._v(" DNS")]),t._v(" "),a("p",[t._v("域名服务器，DNS协议通过域名查找IP地址，或者可以逆向从IP地址反查域名。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/static/http.png",alt:"TCPIP",title:"http协议在TCP/IP运行"}})]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("p",[t._v("《图解http》"),a("br"),t._v(" "),a("a",{attrs:{href:"https://juejin.im/post/5ccd0dfc6fb9a0324a08bb73",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金"),a("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=r.exports}}]);