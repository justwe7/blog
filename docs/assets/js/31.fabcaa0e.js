(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{221:function(e,t,a){"use strict";a.r(t);var r=a(0),v=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("ul",[a("li",[a("a",{attrs:{href:"#%e5%89%8d%e7%ab%af%e6%80%a7%e8%83%bd%e4%bc%98%e5%8c%96"}},[e._v("前端性能优化")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%e9%9d%99%e6%80%81%e8%b5%84%e6%ba%90"}},[e._v("静态资源")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%e5%9b%be%e5%83%8f%e4%bc%98%e5%8c%96"}},[e._v("图像优化")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e6%96%87%e4%bb%b6%e5%a4%a7%e5%b0%8f%e4%bc%98%e5%8c%96"}},[e._v("文件大小优化")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e8%b5%84%e6%ba%90%e5%8a%a0%e8%bd%bd%e4%bc%98%e5%8c%96"}},[e._v("资源加载优化")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e5%87%8f%e5%b0%91-http-%e8%af%b7%e6%b1%82%e4%b8%aa%e6%95%b0"}},[e._v("减少 HTTP 请求个数")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e5%90%88%e7%90%86%e5%ba%94%e7%94%a8%e7%bc%93%e5%ad%98"}},[e._v("合理应用缓存")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%e6%b5%8f%e8%a7%88%e5%99%a8%e7%bc%93%e5%ad%98%e7%ad%96%e7%95%a5"}},[e._v("浏览器缓存策略")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e9%81%bf%e5%85%8d%e4%bd%bf%e7%94%a8%e7%a9%ba%e7%9a%84src%e5%92%8chref"}},[e._v("避免使用空的src和href")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#service-worker"}},[e._v("Service Worker")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e4%bb%a3%e7%a0%81%e6%80%a7%e8%83%bd"}},[e._v("代码性能")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%e4%bb%a3%e7%a0%81%e6%87%92%e6%89%a7%e8%a1%8c"}},[e._v("代码懒执行")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#dom%e4%bc%98%e5%8c%96"}},[e._v("DOM优化")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#javascript"}},[e._v("JavaScript")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#css"}},[e._v("CSS")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e6%9e%84%e5%bb%ba%e5%b7%a5%e5%85%b7%e4%bc%98%e5%8c%96webpackgulp"}},[e._v("构建工具优化(webpack/gulp)")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e9%87%8d%e7%bb%98repaint%e5%92%8c%e5%9b%9e%e6%b5%81reflow"}},[e._v("重绘（Repaint）和回流（Reflow）")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%e5%af%bc%e8%87%b4%e6%80%a7%e8%83%bd%e9%97%ae%e9%a2%98"}},[e._v("导致性能问题：")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e9%87%8d%e7%bb%98%e5%92%8c%e5%9b%9e%e6%b5%81%e5%85%b6%e5%ae%9e%e5%92%8c-event-loop-%e6%9c%89%e5%85%b3"}},[e._v("重绘和回流其实和 Event loop 有关")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e5%87%8f%e5%b0%91%e9%87%8d%e7%bb%98%e5%92%8c%e5%9b%9e%e6%b5%81%e5%8f%82%e8%80%83"}},[e._v("减少重绘和回流(参考)")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#webworker"}},[e._v("Webworker")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e9%9d%a2%e5%90%91%e6%9c%8d%e5%8a%a1%e7%ab%af"}},[e._v("面向服务端")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#http2"}},[e._v("HTTP/2")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#cdn"}},[e._v("CDN")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#cookie%e6%96%b9%e5%90%91"}},[e._v("cookie方向")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#ajax"}},[e._v("Ajax")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#dns-%e9%a2%84%e8%a7%a3%e6%9e%90"}},[e._v("DNS 预解析")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e5%87%8f%e5%b0%91%e9%87%8d%e5%ae%9a%e5%90%91"}},[e._v("减少重定向")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e9%9b%85%e8%99%8e%e5%86%9b%e8%a7%8435%e6%9d%a1"}},[e._v("雅虎军规35条")])])])])]),e._v(" "),a("h1",{attrs:{id:"前端性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化"}},[e._v("#")]),e._v(" 前端性能优化")]),e._v(" "),a("p",[e._v("优化目标：")]),e._v(" "),a("ul",[a("li",[e._v("响应时间控制在 100ms，帧速控制在 60帧/秒")]),e._v(" "),a("li",[e._v("速度指标（SpeedIndex-是显示页面可见部分的平均时间） < 1250，3G上的交互时间（Interaction time）小于5s，关键文件大小预算 < 170 Kb（gzip）")]),e._v(" "),a("li",[e._v("首先加载核心体验，然后是增强功能，最后才是附加功能。")])]),e._v(" "),a("h2",{attrs:{id:"静态资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源"}},[e._v("#")]),e._v(" 静态资源")]),e._v(" "),a("h3",{attrs:{id:"图像优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图像优化"}},[e._v("#")]),e._v(" 图像优化")]),e._v(" "),a("ul",[a("li",[e._v("WebP")]),e._v(" "),a("li",[e._v("图片压缩"),a("a",{attrs:{href:"https://tinypng.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("神器"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("使用字体代替icon")]),e._v(" "),a("li",[e._v("延迟加载")]),e._v(" "),a("li",[e._v("合理使用图片尺寸，不要使用"),a("img"),e._v("的width、height缩放图片，如果用到小图片，就使用相应大小的图片，而不是将200x200的缩小为100x100。否则这其中就有(200x200)-(100x100)=30000个像素是浪费的，这占到了图片尺寸的75%！")]),e._v(" "),a("li",[a("code",[e._v('<img width="100" height="100" src="hahaha.jpg" />')]),e._v(",设置图片的宽和高，以免浏览器按照「猜」的宽高给图片保留的区域和实际宽高差异，产生重绘。")]),e._v(" "),a("li",[e._v("考虑使用video循环替代GIF--权衡\n"),a("blockquote",[a("p",[e._v("浏览器不会预加载 video 内容，但 video 往往要比gif更轻更小")])])]),e._v(" "),a("li",[e._v("添加渐进式图片加载来将延迟加载提升到新的水平。 与 Facebook，Pinterest 和 Medium 类似，你可以先加载低质量或模糊的图像，然后当页面继续加载时，使用LQIP (Low Quality Image Placeholders) technique"),a("a",{attrs:{href:"https://www.guypo.com/introducing-lqip-low-quality-image-placeholders",target:"_blank",rel:"noopener noreferrer"}},[e._v("(低质量图像占位符技术)"),a("OutboundLink")],1),e._v(",替换它们的清晰版本")])]),e._v(" "),a("h3",{attrs:{id:"文件大小优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件大小优化"}},[e._v("#")]),e._v(" 文件大小优化")]),e._v(" "),a("ul",[a("li",[e._v("客户端：js、css压缩(webpack/gulp)")]),e._v(" "),a("li",[e._v("服务端：gzip编码")])]),e._v(" "),a("h3",{attrs:{id:"资源加载优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源加载优化"}},[e._v("#")]),e._v(" 资源加载优化")]),e._v(" "),a("ul",[a("li",[e._v("CSS 文件放在"),a("code",[e._v("<head>")]),e._v("中,先外链,后本页")]),e._v(" "),a("li",[e._v("script标签放在"),a("code",[e._v("<body>")]),e._v("底部。因为 JS 文件执行会阻塞渲染。\n"),a("ul",[a("li",[e._v("当然也可以把 script 标签放在任意位置然后加上 "),a("strong",[e._v("defer")]),e._v(" ，表示该文件会"),a("em",[e._v("并行下载")]),e._v("，但是会放到 "),a("em",[e._v("HTML 解析完成后")]),e._v("顺序执行。")]),e._v(" "),a("li",[e._v("对于"),a("strong",[e._v("没有任何依赖")]),e._v("的 JS 文件可以加上 "),a("strong",[e._v("async")]),e._v(" ，表示加载和渲染后续文档元素的过程将和 JS 文件的加载与"),a("em",[e._v("执行并行无序")]),e._v("进行。")])])]),e._v(" "),a("li",[e._v("使用资源预加载preload和资源预读取prefetch"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Preloading_content",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN"),a("OutboundLink")],1),e._v(" "),a("ul",[a("li",[e._v("preload让浏览器提前加载指定资源，需要执行时再执行，可以加速本页面的加载速度")]),e._v(" "),a("li",[e._v("prefetch告诉浏览器加载下一页面可能会用到的资源，可以加速下一个页面的加载速度")])])])]),e._v(" "),a("h3",{attrs:{id:"减少-http-请求个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少-http-请求个数"}},[e._v("#")]),e._v(" 减少 HTTP 请求个数")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("JS/CSS")]),e._v(":合并JS/CSS文件，gulp/webpack\n"),a("blockquote",[a("p",[e._v("如果不进行文件合并，有如下3个隐患:文件与文件之间有插入的上行请求，增加了N-1个网络延迟/受丢包问题影响更严重/经过代理服务器时可能会被断开\n但是文件合并本身也有自己的问题: 首屏渲染问题/缓存失效问题\n最优方案： 公共库合并/不同页面单独合并/按需加载")])])]),e._v(" "),a("li",[a("strong",[e._v("图片合并")]),e._v("：使用CSS Sprite将背景图片合并成一个文件，通过background-image 和 background-position 控制显示")]),e._v(" "),a("li",[a("strong",[e._v("图片优化")]),e._v("：base64(行内图片)")]),e._v(" "),a("li",[a("strong",[e._v("延迟加载")]),e._v("：非页面首次加载的内容都可以延时加载："),a("em",[e._v("非首屏使用的数据、样式、脚本、图片等,用户交互时才会显示的内容(如抽屉、modal窗口展示)")])]),e._v(" "),a("li",[e._v("不使用CSS @import")])]),e._v(" "),a("h3",{attrs:{id:"合理应用缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合理应用缓存"}},[e._v("#")]),e._v(" 合理应用缓存")]),e._v(" "),a("blockquote",[a("p",[e._v("对于大部分的场景都可以使用强缓存配合协商缓存解决，但是在一些特殊的地方可能需要选择特殊的缓存策略")])]),e._v(" "),a("ul",[a("li",[e._v("对于某些"),a("strong",[e._v("不需要缓存的资源")]),e._v("，可以使用 Cache-control: no-store ，表示该资源不需要缓存，如spa应用的html文件。")]),e._v(" "),a("li",[e._v("对于"),a("strong",[e._v("频繁变动的资源")]),e._v("，可以使用 Cache-Control: no-cache 并配合 ETag 使用，表示该资源已被缓存，但是每次都会发送请求询问资源是否更新。")]),e._v(" "),a("li",[e._v("对于代码文件来说，通常使用 Cache-Control: max-age=31536000 并配合策略缓存使用，然后对文件进行指纹处理，一旦文件名变动就会立刻下载新的文件。")])]),e._v(" "),a("h4",{attrs:{id:"浏览器缓存策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存策略"}},[e._v("#")]),e._v(" 浏览器缓存策略")]),e._v(" "),a("p",[a("strong",[e._v("第一次请求")]),a("br"),e._v(" "),a("img",{attrs:{src:"/static/1-load.png",alt:"第一次请求",title:"第一次请求"}})]),e._v(" "),a("p",[a("strong",[e._v("之后的请求")]),a("br"),e._v(" "),a("img",{attrs:{src:"/static/2+load.png",alt:"再次请求",title:"再次请求"}})]),e._v(" "),a("h3",{attrs:{id:"避免使用空的src和href"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免使用空的src和href"}},[e._v("#")]),e._v(" 避免使用空的src和href")]),e._v(" "),a("ul",[a("li",[e._v("a标签设置空的href，非必要会重定向到当前的页面地址")]),e._v(" "),a("li",[e._v("form设置空的method，会提交多余表单到当前的页面地址")]),e._v(" "),a("li",[e._v("img标签src属性为空字符串，但浏览器仍然会向服务器发起一个HTTP请求(404)")])]),e._v(" "),a("h3",{attrs:{id:"service-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API/Using_Service_Workers",target:"_blank",rel:"noopener noreferrer"}},[e._v("Service Worker"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Service Worker 可以使你的应用先访问本地缓存资源，所以在离线状态时，在没有通过网络接收到更多的数据前，仍可以提供基本的功能（一般称之为 Offline First）"),a("a",{attrs:{href:"https://mdn.github.io/sw-test/",target:"_blank",rel:"noopener noreferrer"}},[e._v("demo"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"代码性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码性能"}},[e._v("#")]),e._v(" 代码性能")]),e._v(" "),a("blockquote",[a("p",[e._v("代码执行速度影响界面展示优化")])]),e._v(" "),a("h3",{attrs:{id:"代码懒执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码懒执行"}},[e._v("#")]),e._v(" 代码懒执行")]),e._v(" "),a("p",[e._v("某些逻辑在使用时再进行展示/计算(如图片，js组件模块)。可以"),a("strong",[e._v("用于首屏优化")]),e._v("，对于某些耗时逻辑并不需要在首屏就使用的，就可以使用懒执行。懒执行需要触发，可以通过"),a("em",[e._v("定时器")]),e._v("或者"),a("em",[e._v("事件的调用/异步")]),e._v("来唤醒。")]),e._v(" "),a("h3",{attrs:{id:"dom优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom优化"}},[e._v("#")]),e._v(" DOM优化")]),e._v(" "),a("ul",[a("li",[e._v("缓存已经访问过的DOM\nconst div = document.getElementById('oDiv')\n由于查询DOM比较耗时，在同一个节点无需多次查询的情况下，可以缓存DOM")]),e._v(" "),a("li",[e._v("减少DOM深度及DOM数量\nHTML 中标签元素越多，标签的层级越深，浏览器解析DOM并绘制到浏览器中所花的时间就越长，所以应尽可能保持 DOM 元素简洁和层级较少。")]),e._v(" "),a("li",[e._v("批量操作DOM\n由于DOM操作比较耗时，且可能会造成回流，因此要避免频繁操作DOM，可以批量操作DOM，先用字符串拼接完毕，再用innerHTML更新DOM")]),e._v(" "),a("li",[e._v("批量操作CSS样式\n通过切换class或者使用元素的style.csstext属性去批量操作元素样式")]),e._v(" "),a("li",[e._v("在内存中操作DOM\n使用DocumentFragment对象，让DOM操作发生在内存中，而不是页面上，不是append append append...")]),e._v(" "),a("li",[e._v("DOM元素离线更新\n对DOM进行相关操作时，例、appendChild等都可以使用Document Fragment对象进行离线操作，带元素“组装”完成后再一次插入页面，或者使用display:none 对元素隐藏，在元素“消失”后进行相关操作")]),e._v(" "),a("li",[e._v("DOM读写分离\n浏览器具有惰性渲染机制，连接多次修改DOM可能只触发浏览器的一次渲染。而如果修改DOM后，立即读取DOM。为了保证读取到正确的DOM值，会触发浏览器的一次渲染。因此，修改DOM的操作要与访问DOM分开进行")]),e._v(" "),a("li",[e._v("事件代理\n事件代理是指将事件监听器注册在父级元素上，由于子元素的事件会通过事件冒泡的方式向上传播到父节点，因此，可以由父节点的监听函数统一处理多个子元素的事件\n"),a("blockquote",[a("p",[e._v("利用事件代理，可以减少内存使用，提高性能及降低代码复杂度")])])]),e._v(" "),a("li",[e._v("能通过伪元素实现的功能，就没必要添加额外元素，如清除浮动")]),e._v(" "),a("li",[e._v("减少使用table布局(会产生大量重绘)")])]),e._v(" "),a("h3",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[e._v("#")]),e._v(" JavaScript")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("移除不必要的js代码，如lodash优化(babel-loader & babel-plugin-lodash)  "),a("a",{attrs:{href:"https://www.jianshu.com/p/3dd1948cf5a2",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),a("OutboundLink")],1)])]),e._v(" "),a("li",[a("p",[e._v("防抖和节流\n使用函数节流（throttle）或函数防抖（debounce），限制某一个方法的频繁触发")])]),e._v(" "),a("li",[a("p",[e._v("及时清理环境\n及时消除对象引用，清除定时器，清除事件监听器，创建最小作用域变量，可以及时回收内存")])]),e._v(" "),a("li",[a("p",[e._v("尽早处理事件，在DOMContentLoaded即可进行，不用等到load以后")]),e._v(" "),a("blockquote",[a("p",[e._v("Load 事件触发代表页面中的 DOM，CSS，JS，图片已经全部加载完毕。\nDOMContentLoaded 事件触发代表初始的 HTML 被完全加载和解析，不需要等待 CSS，JS，图片加载。")])])]),e._v(" "),a("li",[a("p",[e._v("使用requestAnimationFrame来替代setTimeout和setInterval")]),e._v(" "),a("blockquote",[a("p",[e._v("使用 setTimeout 或者 setInterval 来触发更新页面的函数，该函数可能在一帧的中间或者结束的时间点上调用，进而导致该帧后面需要进行的事情没有完成，引发丢帧")])])]),e._v(" "),a("li",[a("p",[e._v("使用"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Intersection_Observer_API",target:"_blank",rel:"noopener noreferrer"}},[e._v("IntersectionObserver API"),a("OutboundLink")],1),e._v("来实现图片可视区域的懒加载")]),e._v(" "),a("blockquote",[a("p",[e._v("Intersection Observer API 会注册一个回调方法，每当期望被监视的元素进入或者退出另外一个元素的时候(或者浏览器的视口)该回调方法将会被执行，或者两个元素的交集部分大小发生变化的时候回调方法也会被执行。"),a("a",{attrs:{href:"https://www.cnblogs.com/caizhenbo/p/7993461.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("实现方案"),a("OutboundLink")],1)])])])]),e._v(" "),a("h3",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[e._v("#")]),e._v(" CSS")]),e._v(" "),a("ul",[a("li",[e._v("使用硬件加速，如translate3D代替translateX/Y/Z")]),e._v(" "),a("li",[e._v("避免选择器嵌套过深(安利scss"),a("code",[e._v("@at-root{}")]),e._v(")\n性能排序\n"),a("ul",[a("li",[e._v("id选择器（#myid）")]),e._v(" "),a("li",[e._v("类选择器（.myclassname）")]),e._v(" "),a("li",[e._v("标签选择器（div,h1,p）")]),e._v(" "),a("li",[e._v("相邻选择器（h1+p）")]),e._v(" "),a("li",[e._v("子选择器（ul > li）")]),e._v(" "),a("li",[e._v("后代选择器（li a）")]),e._v(" "),a("li",[e._v("通配符选择器（*）")]),e._v(" "),a("li",[e._v('属性选择器（a[rel="external"]）')]),e._v(" "),a("li",[e._v("伪类选择器（a:hover,li:nth-child）")])])]),e._v(" "),a("li",[e._v("减少重绘回流")])]),e._v(" "),a("h3",{attrs:{id:"构建工具优化-webpack-gulp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建工具优化-webpack-gulp"}},[e._v("#")]),e._v(" 构建工具优化(webpack/gulp)")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("CommonsChunkPlugin")]),e._v("提取公共代码")]),e._v(" "),a("li",[a("code",[e._v("Tree-shaking")]),e._v("无用代码移除。通过只加载生产中实际使用的代码并清除在 Webpack 中 未使用的 import")]),e._v(" "),a("li",[a("code",[e._v("Scope hoisting")]),e._v("作用域提升"),a("a",{attrs:{href:"https://segmentfault.com/a/1190000018220850",target:"_blank",rel:"noopener noreferrer"}},[e._v("(了解作用)。"),a("OutboundLink")],1),e._v("\nwebpack默认代码会将将所有模块都用函数包裹起来，然后自己实现了一套模块加载、执行与缓存的功能，使用这样的结构是为了更容易实现 "),a("code",[e._v("Code Splitting")]),e._v("（包括 按需加载）、模块热替换等功能。\n"),a("blockquote",[a("p",[e._v("想象一下模块导入一个方法foo的情况，该方法需要 "),a("strong",[e._v("webpack_require")]),e._v(" 从C模块导入另一个B模块，B模块再引入A模块...\n使用 scope hoisting 后会把需要导入的文件直接移入导入模块顶部")])]),e._v(" "),a("ul",[a("li",[e._v("代码量明显减少")]),e._v(" "),a("li",[e._v("减少多个函数后内存占用减少")]),e._v(" "),a("li",[e._v("不用多次使用 "),a("strong",[e._v("webpack_require")]),e._v(" 调用模块，运行速度也会得到提升")])])]),e._v(" "),a("li",[a("code",[e._v("Code-splitting")]),e._v(" 可将代码分解为按需加载的块。并不是所有的 JavaScript 都是必须下载、解析和编译的。")]),e._v(" "),a("li",[a("code",[e._v("preload-webpack-plugin")]),a("a",{attrs:{href:"https://github.com/GoogleChromeLabs/preload-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("(参考)。"),a("OutboundLink")],1),e._v("获取代码拆分的路径，然后使用"),a("code",[e._v('<link rel="preload">')]),e._v(" 或者 "),a("code",[e._v('<link rel="prefetch">')]),e._v(" 提示浏览器预加载它们")]),e._v(" "),a("li",[e._v("babel差异化处理，只转换现代浏览器不支持的 ES2015+ 的特性。然后设置两个构建，一个为 ES6 一个为 ES5，这两个包都是只提供给实际需要它们的传统浏览器"),a("a",{attrs:{href:"https://2ality.com/2017/02/babel-preset-env.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("(参考)。"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("优化依赖模块的大小，如：lodash优化(babel-loader & babel-plugin-lodash) "),a("a",{attrs:{href:"https://www.jianshu.com/p/3dd1948cf5a2",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("按需加载，Webpack 内置了对 import(*) 语句的支持，import 返回一个 Promise，当文件加载成功时可以在 Promise 的 then 方法中获取到 show.js 导出的内容"),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'btn'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 当按钮被点击后才去加载 show.js 文件，文件加载成功后执行文件导出的函数")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('/* webpackChunkName: "show" */')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./show'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Webpack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])])])]),e._v(" "),a("h3",{attrs:{id:"重绘（repaint）和回流（reflow）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘（repaint）和回流（reflow）"}},[e._v("#")]),e._v(" 重绘（Repaint）和回流（Reflow）")]),e._v(" "),a("ul",[a("li",[e._v("重绘是当节点需要更改外观而不会影响布局的，比如改变 color 就叫称为重绘")]),e._v(" "),a("li",[e._v("回流是布局或者几何属性需要改变就称为回流。")])]),e._v(" "),a("blockquote",[a("p",[e._v("回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变深层次的节点很可能导致父节点的一系列回流。")])]),e._v(" "),a("h4",{attrs:{id:"导致性能问题："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导致性能问题："}},[e._v("#")]),e._v(" 导致性能问题：")]),e._v(" "),a("ul",[a("li",[e._v("改变 window 大小")]),e._v(" "),a("li",[e._v("改变字体")]),e._v(" "),a("li",[e._v("添加或删除样式")]),e._v(" "),a("li",[e._v("文字改变")]),e._v(" "),a("li",[e._v("定位或者浮动")]),e._v(" "),a("li",[e._v("盒模型")])]),e._v(" "),a("h4",{attrs:{id:"重绘和回流其实和-event-loop-有关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘和回流其实和-event-loop-有关"}},[e._v("#")]),e._v(" 重绘和回流其实和 Event loop 有关")]),e._v(" "),a("ol",[a("li",[e._v("当 Event loop 执行完 Microtasks(微任务) 后，会判断 document 是否需要更新。因为浏览器是 60Hz 的刷新率，每 16ms 才会更新一次。")]),e._v(" "),a("li",[e._v("然后判断是否有 resize 或者 scroll ，有的话会去触发事件，所以 resize 和 scroll 事件也是至少 16ms 才会触发一次，并且自带节流功能。")]),e._v(" "),a("li",[e._v("判断是否触发了 media query")]),e._v(" "),a("li",[e._v("更新动画并且发送事件")]),e._v(" "),a("li",[e._v("判断是否有全屏操作事件")]),e._v(" "),a("li",[e._v("执行 requestAnimationFrame 回调")]),e._v(" "),a("li",[e._v("执行 IntersectionObserver 回调，该方法用于判断元素是否可见，可以用于懒加载上，但是兼容性不好")]),e._v(" "),a("li",[e._v("更新界面")]),e._v(" "),a("li",[e._v("以上就是一帧中可能会做的事情。如果在一帧中有空闲时间，就会去执行 requestIdleCallback 回调。")])]),e._v(" "),a("h4",{attrs:{id:"减少重绘和回流-参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少重绘和回流-参考"}},[e._v("#")]),e._v(" 减少重绘和回流(参考)")]),e._v(" "),a("ol",[a("li",[e._v("使用 translate 替代 top")]),e._v(" "),a("li",[e._v("使用 visibility 替换 display: none ，因为前者只会引起重绘，后者会引发回流（改变了布局）")]),e._v(" "),a("li",[e._v("把 DOM 离线后修改，比如：先把 DOM 给 display:none (有一次 Reflow)，然后你修改 100 次，然后再把它显示出来")]),e._v(" "),a("li",[e._v("不要把 DOM 结点的属性值放在一个循环里当成循环里的变量")]),e._v(" "),a("li",[e._v("不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局")]),e._v(" "),a("li",[e._v("动画实现的速度的选择，动画速度越快，回流次数越多，也可以选择使用 requestAnimationFrame")]),e._v(" "),a("li",[e._v("CSS 选择符从右往左匹配查找，避免 DOM 深度过深(scss多使用"),a("code",[e._v("@root{}")]),e._v(")")]),e._v(" "),a("li",[e._v("将频繁运行的动画变为图层，图层能够阻止该节点回流影响别的元素。比如对于 video 标签，浏览器会自动将该节点变为图层。")])]),e._v(" "),a("h3",{attrs:{id:"webworker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webworker"}},[e._v("#")]),e._v(" Webworker")]),e._v(" "),a("p",[e._v("当在 HTML 页面中执行脚本时，页面的状态是不可响应的，直到脚本已完成。web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。用户可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。\n执行 JS 代码过长会卡住渲染，"),a("em",[e._v("对于需要很多时间计算的代码可以考虑使用 Webworker")]),e._v("。Webworker 可以让我们另开一个线程执行脚本而不影响渲染。")]),e._v(" "),a("blockquote",[a("p",[e._v("请注意，Web Worker 不能访问 DOM，因为 DOM 不是一个 安全线程，并且执行的代码需要包含在一个单独的文件中。")])]),e._v(" "),a("h2",{attrs:{id:"面向服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向服务端"}},[e._v("#")]),e._v(" 面向服务端")]),e._v(" "),a("blockquote",[a("p",[e._v("代码部署后，客户端与服务器通信优化")])]),e._v(" "),a("h3",{attrs:{id:"http-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2"}},[e._v("#")]),e._v(" HTTP/2")]),e._v(" "),a("p",[e._v("因为浏览器会有并发请求限制，在 HTTP / 1.0 时代，每个请求都需要建立和断开，消耗了好几个 RTT 时间，并且由于 TCP 慢启动的原因，加载体积大的文件会需要更多的时间。")]),e._v(" "),a("blockquote",[a("p",[e._v("在 HTTP / 2.0 中引入了多路复用，能够让多个请求使用同一个 TCP 链接，极大的加快了网页的加载速度。并且还支持 Header 压缩，进一步的减少了请求的数据大小。")])]),e._v(" "),a("ul",[a("li",[e._v("服务器推送关键CSS，比如，浏览器只请求了index.html，但是服务器把index.html、style.css、example.png全部发送给浏览器。这样的话，只需要一轮 HTTP 通信，浏览器就得到了全部资源，提高了性能。"),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/03/http2_server_push.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("阮一峰"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("启用 HPACK压缩 "),a("a",{attrs:{href:"https://blog.csdn.net/u010129119/article/details/79392545",target:"_blank",rel:"noopener noreferrer"}},[e._v("(HTTP2 头部压缩算法)"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("启用 OCSP stapling。可以加快 TLS 握手速度。在线证书状态协议（OCSP）作为证书撤销列表（CRL）协议的替代方案。两种协议都用于检查 SSL 证书是否已被撤销。但是，OCSP 协议不要求浏览器花时间下载然后在列表中搜索证书信息，因此减少握手所需要的时间。")])]),e._v(" "),a("h3",{attrs:{id:"cdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn"}},[e._v("#")]),e._v(" CDN")]),e._v(" "),a("blockquote",[a("p",[e._v("CDN全称是Content Delivery Network，即内容分发网络，它能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度")])]),e._v(" "),a("p",[e._v("静态资源尽量使用 CDN 加载，由于浏览器对于单个域名有并发请求上限，可以考虑使用多个 CDN 域名")]),e._v(" "),a("p",[a("strong",[e._v("CDN执行过程")])]),e._v(" "),a("ol",[a("li",[e._v("首先访问本地的 DNS ，如果没有命中，继续递归或者迭代查找，直到命中拿到对应的 IP 地址。")]),e._v(" "),a("li",[e._v("拿到对应的 IP 地址之后服务器端发送请求到目的地址。注意这里返回的不直接是 cdn 服务器的 IP 地址，而是全局负载均衡系统的 IP 地址")]),e._v(" "),a("li",[e._v("全局负载均衡系统会根据客户端的 IP地址和请求的 url 和相应的区域负载均衡系统通信")]),e._v(" "),a("li",[e._v("区域负载均衡系统拿着这两个东西获取距离客户端最近且有相应资源的cdn 缓存服务器的地址，返回给全局负载均衡系统")]),e._v(" "),a("li",[e._v("全局负载均衡系统返回确定的 cdn 缓存服务器的地址给客户端。")]),e._v(" "),a("li",[e._v("客户端请求缓存服务器上的文件")])]),e._v(" "),a("blockquote",[a("p",[e._v("X-Forwarded-For（XFF）是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP请求头字段。 (面试题，如何判断某台服务器的资源挂掉---通过查询xff找到目标服务器)")])]),e._v(" "),a("p",[e._v("使用CDN好处？"),a("a",{attrs:{href:"https://github.com/renaesop/blog/issues/1",target:"_blank",rel:"noopener noreferrer"}},[e._v("(面向前端的CDN原理介绍)"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("提升网页加载速度")]),e._v(" "),a("li",[e._v("处理高流量负载")]),e._v(" "),a("li",[e._v("无需?本完成本地化覆盖")]),e._v(" "),a("li",[e._v("减少带宽消耗")]),e._v(" "),a("li",[e._v("在多台服务器间均衡负载")]),e._v(" "),a("li",[e._v("使你的网站免于DDoS（拒绝服务）的攻击")]),e._v(" "),a("li",[e._v("……")])]),e._v(" "),a("h3",{attrs:{id:"cookie方向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie方向"}},[e._v("#")]),e._v(" cookie方向")]),e._v(" "),a("ul",[a("li",[e._v("设置 Cookie 的 domain 级别，如无必要，不要影响到 sub-domain")]),e._v(" "),a("li",[e._v("去除不必要的 Cookie，尽量压缩 Cookie 大小")]),e._v(" "),a("li",[e._v("如果仅仅是前端使用的缓存数据，尽量使用sessionStorage/localStorage")]),e._v(" "),a("li",[e._v("注意 CDN 域名要与主站不同，否则每次请求都会带上主站的 Cookie")])]),e._v(" "),a("h3",{attrs:{id:"ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[e._v("#")]),e._v(" Ajax")]),e._v(" "),a("ul",[a("li",[e._v("浏览器执行XMLHttpRequest POST请求时分成两步，先发送Http Header，再发送data。而GET只使用一个TCP数据包（Http Header与data）发送数据，所以首选GET方法。\n"),a("blockquote",[a("p",[e._v("根据HTTP规范，GET用于获取数据，POST则用于向服务器发送数据，所以Ajax请求数据时使用GET更符合规范。")])])]),e._v(" "),a("li",[e._v("多次使用的接口数据，考虑缓存到内存中(vuex、redux等最佳实践)")])]),e._v(" "),a("h3",{attrs:{id:"dns-预解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns-预解析"}},[e._v("#")]),e._v(" DNS 预解析")]),e._v(" "),a("p",[e._v("DNS 解析也是需要时间的，可以通过预解析的方式来预先获得域名所对应的 IP。\n"),a("code",[e._v('<link rel="dns-prefetch" href="//163.com" />')])]),e._v(" "),a("p",[e._v("DNS解析过程")]),e._v(" "),a("ol",[a("li",[e._v("浏览器中输入想要访问的网站的域名，操作系统会先检查本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。")]),e._v(" "),a("li",[e._v("如果hosts里没有这个域名的映射，客户端会向本地DNS服务器发起查询。本地DNS服务器收到查询时，如果要查询的域名包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析。")]),e._v(" "),a("li",[e._v("如果本地DNS服务器本地区域文件与缓存解析都失效，则根据本地DNS服务器的设置，采用递归或者迭代查询，直至解析完成。")])]),e._v(" "),a("blockquote",[a("p",[e._v("当浏览器访问一个域名的时候，需要解析一次DNS，获得对应域名的ip地址。在解析过程中，按照浏览器缓存、系统缓存、路由器缓存、ISP(运营商)DNS缓存、根域名服务器、顶级域名服务器、主域名服务器的顺序，逐步读取缓存，直到拿到IP地址")])]),e._v(" "),a("h3",{attrs:{id:"减少重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少重定向"}},[e._v("#")]),e._v(" 减少重定向")]),e._v(" "),a("p",[e._v("尽量避免使用重定向，当页面发生了重定向，就会延迟整个HTML文档的传输。在HTML文档到达之前，页面中不会呈现任何东西，也没有任何组件会被下载，降低了用户体验。")]),e._v(" "),a("blockquote",[a("p",[e._v("如果一定要使用重定向，如http重定向到https，要使用301永久重定向，而不是302临时重定向。因为，如果使用302，则每一次访问http，都会被重定向到https的页面。而永久重定向，在第一次从http重定向到https之后 ，每次访问http，会直接返回https的页面")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/static/yahoo.jpg",alt:"雅虎军规",title:"雅虎军规"}})]),e._v(" "),a("h2",{attrs:{id:"雅虎军规35条"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#雅虎军规35条"}},[e._v("#")]),e._v(" 雅虎军规35条")]),e._v(" "),a("ol",[a("li",[e._v("尽量减少 HTTP 请求个数——须权衡")]),e._v(" "),a("li",[e._v("使用 CDN（内容分发网络）")]),e._v(" "),a("li",[e._v("为文件头指定 Expires 或 Cache-Control ，使内容具有缓存性。")]),e._v(" "),a("li",[e._v("避免空的 src 和 href")]),e._v(" "),a("li",[e._v("使用 gzip 压缩内容")]),e._v(" "),a("li",[e._v("把 CSS 放到顶部")]),e._v(" "),a("li",[e._v("把 JS 放到底部")]),e._v(" "),a("li",[e._v("避免使用 CSS 表达式")]),e._v(" "),a("li",[e._v("将 CSS 和 JS 放到外部文件中")]),e._v(" "),a("li",[e._v("减少 DNS 查找次数")]),e._v(" "),a("li",[e._v("精简 CSS 和 JS")]),e._v(" "),a("li",[e._v("避免跳转")]),e._v(" "),a("li",[e._v("剔除重复的 JS 和 CSS")]),e._v(" "),a("li",[e._v("配置 ETags")]),e._v(" "),a("li",[e._v("使 AJAX 可缓存")]),e._v(" "),a("li",[e._v("尽早刷新输出缓冲")]),e._v(" "),a("li",[e._v("使用 GET 来完成 AJAX 请求")]),e._v(" "),a("li",[e._v("延迟加载")]),e._v(" "),a("li",[e._v("预加载")]),e._v(" "),a("li",[e._v("减少 DOM 元素个数")]),e._v(" "),a("li",[e._v("根据域名划分页面内容")]),e._v(" "),a("li",[e._v("尽量减少 iframe 的个数")]),e._v(" "),a("li",[e._v("避免 404")]),e._v(" "),a("li",[e._v("减少 Cookie 的大小")]),e._v(" "),a("li",[e._v("使用无 cookie 的域")]),e._v(" "),a("li",[e._v("减少 DOM 访问")]),e._v(" "),a("li",[e._v("开发智能事件处理程序")]),e._v(" "),a("li",[e._v("用 "),a("code",[e._v("<link>")]),e._v(" 代替 @import")]),e._v(" "),a("li",[e._v("避免使用滤镜")]),e._v(" "),a("li",[e._v("优化图像")]),e._v(" "),a("li",[e._v("优化 CSS Spirite")]),e._v(" "),a("li",[e._v("不要在 HTML 中缩放图像——须权衡")]),e._v(" "),a("li",[e._v("favicon.ico要小而且可缓存")]),e._v(" "),a("li",[e._v("保持单个内容小于25K")]),e._v(" "),a("li",[e._v("打包组件成复合文本")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/static/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.jpg",alt:"性能优化指标1",title:"性能优化指标1"}})]),e._v(" "),a("p",[a("a",{attrs:{href:"https://yuchengkai.cn/docs/frontend/performance.html#%E4%BC%98%E5%8C%96%E6%B8%B2%E6%9F%93%E8%BF%87%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考1"),a("OutboundLink")],1),a("br"),e._v(" "),a("a",{attrs:{href:"https://juejin.im/post/5c46cbaee51d453f45612a2c",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考2"),a("OutboundLink")],1),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/xiaohuochai/p/9178390.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考3"),a("OutboundLink")],1),a("br"),e._v(" "),a("a",{attrs:{href:"https://juejin.im/post/5b0bff30f265da08f76cc6f0",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考4"),a("OutboundLink")],1),a("br"),e._v(" "),a("a",{attrs:{href:"https://juejin.im/post/5a966bd16fb9a0635172a50a",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考5"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=v.exports}}]);